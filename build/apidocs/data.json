{
    "project": {
        "name": "nextract",
        "description": "",
        "version": "0.0.1",
        "url": ""
    },
    "files": {
        "build/examples/csvAndSort.js": {
            "name": "build/examples/csvAndSort.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "build/examples/filterAndGroup.js": {
            "name": "build/examples/filterAndGroup.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "build/examples/jsonAndSort.js": {
            "name": "build/examples/jsonAndSort.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "build/examples/queryAndSort.js": {
            "name": "build/examples/queryAndSort.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "build/plugins/core/Calculator.js": {
            "name": "build/plugins/core/Calculator.js",
            "modules": {},
            "classes": {
                "Nextract.Plugins.Core.Calculator": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/plugins/core/Database.js": {
            "name": "build/plugins/core/Database.js",
            "modules": {},
            "classes": {
                "Nextract.Plugins.Core.Database": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/plugins/core/Filter.js": {
            "name": "build/plugins/core/Filter.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "build/plugins/core/GroupBy.js": {
            "name": "build/plugins/core/GroupBy.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "build/plugins/core/Http.js": {
            "name": "build/plugins/core/Http.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "build/plugins/core/Input.js": {
            "name": "build/plugins/core/Input.js",
            "modules": {},
            "classes": {
                "Nextract.Plugins.Core.Input": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/plugins/core/Logger.js": {
            "name": "build/plugins/core/Logger.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "build/plugins/core/Output.js": {
            "name": "build/plugins/core/Output.js",
            "modules": {},
            "classes": {
                "Nextract.Plugins.Core.Output": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "build/plugins/core/Sort.js": {
            "name": "build/plugins/core/Sort.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "build/plugins/core/Validator.js": {
            "name": "build/plugins/core/Validator.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "build/plugins/pluginUtils.js": {
            "name": "build/plugins/pluginUtils.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "build/nextract.js": {
            "name": "build/nextract.js",
            "modules": {},
            "classes": {
                "Nextract": 1
            },
            "fors": {
                "Nextract": 1
            },
            "namespaces": {}
        }
    },
    "modules": {},
    "classes": {
        "Nextract.Plugins.Core.Calculator": {
            "name": "Nextract.Plugins.Core.Calculator",
            "shortname": "Nextract.Plugins.Core.Calculator",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "build/plugins/core/Calculator.js",
            "line": 3,
            "description": "Mixes in a series of common mathematical calculations"
        },
        "Nextract.Plugins.Core.Database": {
            "name": "Nextract.Plugins.Core.Database",
            "shortname": "Nextract.Plugins.Core.Database",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "build/plugins/core/Database.js",
            "line": 3,
            "description": "Mixes in methods used to work with a database"
        },
        "Nextract.Plugins.Core.Input": {
            "name": "Nextract.Plugins.Core.Input",
            "shortname": "Nextract.Plugins.Core.Input",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "build/plugins/core/Input.js",
            "line": 3,
            "description": "Mixes in methods used to read files"
        },
        "Nextract.Plugins.Core.Output": {
            "name": "Nextract.Plugins.Core.Output",
            "shortname": "Nextract.Plugins.Core.Output",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "build/plugins/core/Output.js",
            "line": 3,
            "description": "Mixes in methods used to export files"
        },
        "Nextract": {
            "name": "Nextract",
            "shortname": "Nextract",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "build/nextract.js",
            "line": 3,
            "description": "ETL class that all programs start from",
            "is_constructor": 1
        }
    },
    "elements": {},
    "classitems": [
        {
            "file": "build/examples/csvAndSort.js",
            "line": 3,
            "description": "Example: CSV input and sort...",
            "class": "Nextract.Plugins.Core.Calculator"
        },
        {
            "file": "build/examples/filterAndGroup.js",
            "line": 3,
            "description": "Example: Filter and group data...",
            "class": "Nextract.Plugins.Core.Calculator"
        },
        {
            "file": "build/examples/jsonAndSort.js",
            "line": 3,
            "description": "Example: JSON input and sort...",
            "class": "Nextract.Plugins.Core.Calculator"
        },
        {
            "file": "build/examples/queryAndSort.js",
            "line": 3,
            "description": "Example: Query and sort...",
            "class": "Nextract.Plugins.Core.Calculator"
        },
        {
            "file": "build/plugins/core/Calculator.js",
            "line": 13,
            "description": "Adds numbers",
            "itemtype": "method",
            "name": "add",
            "class": "Nextract.Plugins.Core.Calculator"
        },
        {
            "file": "build/plugins/core/Database.js",
            "line": 57,
            "description": "Raw query interface for select statements",
            "itemtype": "method",
            "name": "select",
            "example": [
                "\n    ETL.Plugins.Core.Database.select('dbname', 'select * from tablename');"
            ],
            "params": [
                {
                    "name": "dbName",
                    "description": "A database name that matches a object key defined in your Nextract config file",
                    "type": "String"
                },
                {
                    "name": "sql",
                    "description": "SQL statement to execute. Can be a fully formed SQL statement or\na parameterized one with \"?\" placeholders. If the later, then sqlParams\nmust be an array of values to be replaced in order.",
                    "type": "String"
                },
                {
                    "name": "sqlParams",
                    "description": "(optional) List of params to be subbed as a parameterized query",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "Promise resolved with an array of database rows that match the given select statement",
                "type": "Promise"
            },
            "class": "Nextract.Plugins.Core.Database"
        },
        {
            "file": "build/plugins/core/Filter.js",
            "line": 3,
            "description": "Custom module used to filter data...",
            "class": "Nextract.Plugins.Core.Input"
        },
        {
            "file": "build/plugins/core/GroupBy.js",
            "line": 3,
            "description": "Custom module used to perform grouping operations on data...",
            "class": "Nextract.Plugins.Core.Input"
        },
        {
            "file": "build/plugins/core/Http.js",
            "line": 3,
            "description": "Custom module used to ...",
            "class": "Nextract.Plugins.Core.Input"
        },
        {
            "file": "build/plugins/core/Input.js",
            "line": 64,
            "description": "Used to read files",
            "itemtype": "method",
            "name": "readFile",
            "example": [
                "\n    ETL.Plugins.Core.Input.readFile('json', sampleUsersInputFilePath);"
            ],
            "params": [
                {
                    "name": "fileType",
                    "description": "Type of file to write; json, csv, or excel",
                    "type": "String"
                },
                {
                    "name": "filePath",
                    "description": "Full path of file to read (include filename and extension)",
                    "type": "String"
                }
            ],
            "class": "Nextract.Plugins.Core.Input"
        },
        {
            "file": "build/plugins/core/Logger.js",
            "line": 3,
            "description": "Winston logging config\nReferences:\n- https://github.com/winstonjs/winston\n- http://stackoverflow.com/a/23330037\n- http://stackoverflow.com/a/25233851",
            "class": "Nextract.Plugins.Core.Output"
        },
        {
            "file": "build/plugins/core/Output.js",
            "line": 79,
            "description": "Used to output files",
            "itemtype": "method",
            "name": "writeFile",
            "example": [
                "\n    ETL.Plugins.Core.Output.writeFile('csv', \"path/to/file.csv\", { header: true }, data);"
            ],
            "params": [
                {
                    "name": "fileType",
                    "description": "Type of file to write; json, csv, or excel",
                    "type": "String"
                },
                {
                    "name": "data",
                    "description": "An array of objects to be wrtten to the file",
                    "type": "Array"
                },
                {
                    "name": "filePath",
                    "description": "Full path of file to write (include filename and extension)",
                    "type": "String"
                },
                {
                    "name": "formattingConfig",
                    "description": "Object contain config options for the file type being written.\n1) If cvs - all options allowed by cvs-stringify (http://csv.adaltas.com/stringify/) are supported\n2) If json - the only option is formatting with X number of spaces (e.g.) {spaces: 2}\n3) If excel - see https://www.npmjs.com/package/excel4node",
                    "type": "Object"
                }
            ],
            "class": "Nextract.Plugins.Core.Output"
        },
        {
            "file": "build/plugins/core/Sort.js",
            "line": 3,
            "description": "Custom module used to sort data...",
            "class": "Nextract"
        },
        {
            "file": "build/plugins/core/Validator.js",
            "line": 3,
            "description": "Custom module used to validate data",
            "class": "Nextract"
        },
        {
            "file": "build/plugins/pluginUtils.js",
            "line": 3,
            "description": "Nextract Plugin Base",
            "class": "Nextract"
        },
        {
            "file": "build/nextract.js",
            "line": 17,
            "description": "Object containing references to core plugins that have loaded in the current program",
            "itemtype": "property",
            "name": "Plugins.Core",
            "type": "Object",
            "class": "Nextract"
        },
        {
            "file": "build/nextract.js",
            "line": 26,
            "description": "Object containing references to vendor plugins that have loaded in the current program",
            "itemtype": "property",
            "name": "Plugins.Vendor",
            "type": "Object",
            "class": "Nextract"
        },
        {
            "file": "build/nextract.js",
            "line": 40,
            "description": "Used to mixin the functionality of a core or 3rd party vendor ETL plugin. These\nplugins are located in plugins/core & plugins/vendor.",
            "itemtype": "method",
            "name": "loadPlugin",
            "params": [
                {
                    "name": "pluginTypes",
                    "description": "Type of plugin being imported (Core or Vendor)",
                    "type": "String"
                },
                {
                    "name": "pluginNames",
                    "description": "Plugin(s) to import",
                    "type": "String | Array"
                }
            ],
            "class": "Nextract"
        }
    ],
    "warnings": [
        {
            "message": "Missing item type\nExample: CSV input and sort...",
            "line": " build/examples/csvAndSort.js:3"
        },
        {
            "message": "Missing item type\nExample: Filter and group data...",
            "line": " build/examples/filterAndGroup.js:3"
        },
        {
            "message": "Missing item type\nExample: JSON input and sort...",
            "line": " build/examples/jsonAndSort.js:3"
        },
        {
            "message": "Missing item type\nExample: Query and sort...",
            "line": " build/examples/queryAndSort.js:3"
        },
        {
            "message": "Missing item type\nCustom module used to filter data...",
            "line": " build/plugins/core/Filter.js:3"
        },
        {
            "message": "Missing item type\nCustom module used to perform grouping operations on data...",
            "line": " build/plugins/core/GroupBy.js:3"
        },
        {
            "message": "Missing item type\nCustom module used to ...",
            "line": " build/plugins/core/Http.js:3"
        },
        {
            "message": "Missing item type\nWinston logging config\nReferences:\n- https://github.com/winstonjs/winston\n- http://stackoverflow.com/a/23330037\n- http://stackoverflow.com/a/25233851",
            "line": " build/plugins/core/Logger.js:3"
        },
        {
            "message": "Missing item type\nCustom module used to sort data...",
            "line": " build/plugins/core/Sort.js:3"
        },
        {
            "message": "Missing item type\nCustom module used to validate data",
            "line": " build/plugins/core/Validator.js:3"
        },
        {
            "message": "Missing item type\nNextract Plugin Base",
            "line": " build/plugins/pluginUtils.js:3"
        }
    ]
}